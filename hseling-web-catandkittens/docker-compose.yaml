version: '3.4'

x-common-variables: &common-variables
 CELERY_BROKER_URL: redis://redis:6379
 CELERY_RESULT_BACKEND: redis://redis:6379
 MINIO_ACCESS_KEY: minio
 MINIO_SECRET_KEY: minio123
 MINIO_URL: minio:9000
 MINIO_BUCKET_NAME: hse-api-bucket
 MYSQL_HOST: mysql
 MYSQL_ROOT_PASSWORD: mysql123
 MYSQL_USER: mysql
 MYSQL_PASSWORD: mysql123
 MYSQL_DATABASE: hse-api-database
 RESTRICTED_MODE: 0

services:
 hse-api-web:
  image: hseling/hseling-api-catandkittens:latest
  ports:
   - "80:80"
  links:
   - redis
   - minio
   - mysql
   - hse-api-celery
  environment: *common-variables

 hse-api-celery:
  image: hseling/hseling-api-catandkittens:latest
  command: celery -A main.celery worker
  links:
   - redis
   - minio
   - mysql
  environment: *common-variables

 minio:
  image: minio/minio:latest
  volumes:
   - data:/data
  ports:
   - "9000:9000"
  command: server /data/minio
  environment: *common-variables

 mysql:
  image: mysql
  command: --default-authentication-plugin=mysql_native_password
  restart: always
  environment: *common-variables

 redis:
  image: redis:latest

 # Development related
 db:
  env_file: environment.env
  build:
   context: .
   dockerfile: ./docker/db/Dockerfile
   args:
    # These values should be in sync with environment.env
    # for development. If you change them, you'll 
    # need to rebuild the container
    - POSTGRES_DB=templatesitedb
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=somepassword
    - POSTGRES_PORT=5432
    # Remember to keep this consistent
    - django_secret_key=secret_key!
    - DJANGO_ADMIN_NAME=hello
    - DJANGO_ADMIN_EMAIL=hello@example.com
    - DJANGO_ADMIN_PASSWORD=hello
 log:
  env_file: environment.env
  build:
   context: .
   dockerfile: ./docker/log/Dockerfile
 metrics:
  build:
    context: .
    dockerfile: ./docker/metrics/Dockerfile
  ports:
   - "9090:9090"
 metrics-graph:
  image: grafana/grafana
  ports:
   - "3000:3000"
  depends_on:
   - metrics
 build-deps:
  env_file: environment.env
  build:
   context: .
   dockerfile: ./docker/deps/Dockerfile
  volumes:
   - ./vendor:/opt/ext_vendor
  command: /opt/copy_deps.sh
 dev-server:
  env_file: environment.env
  environment:
   - CONSOLE_LOGS=1
  build: 
   context: .
   args:
    # Remember to keep this consistent
    - django_secret_key=secret_key!
  command: ./start_dev_server.sh
  ports:
   - "8000:80"
  volumes:
   - ./src:/opt/code
  depends_on:
   - db
   - log
   - hse-api-web
   - hse-api-celery
 test:
  env_file: environment.env
  environment:
   - CONSOLE_LOGS=1
  build: 
   context: .
   args:
    # Remember to keep this consistent
    - django_secret_key=secret_key!
  entrypoint: pytest
  volumes:
   - ./src:/opt/code
  depends_on:
   - db
   - build-deps
 system-test:
  env_file: environment.env
  build:
    context: .
    dockerfile: ./docker/system-test/Dockerfile
  entrypoint: pytest
  volumes:
    - ./system-test:/opt/system-test
  depends_on:
    - server

 # Producion related
 server:
  image: templatesite
  env_file: environment.env
  build: 
   context: .
   args:
    # Remember to keep this consistent
    - django_secret_key=secret_key!
  command: /opt/server/start_server.sh
  ports:
   - "8080:80"
  depends_on:
   - db
   - log
   - metrics
   - hse-api-web
   - hse-api-celery

volumes:
  data:
